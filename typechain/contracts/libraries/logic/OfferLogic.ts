/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface OfferLogicInterface extends utils.Interface {
  functions: {};

  events: {
    "OfferAccepted(address,address,uint256,address,uint256)": EventFragment;
    "OfferAmountUpdated(address,address,uint256,address,uint256,uint256)": EventFragment;
    "OfferCreated(address,address,uint256,address,uint256,uint256)": EventFragment;
    "OfferDeadlineExtended(address,address,uint256,uint256,uint256)": EventFragment;
    "OfferRemoved(address,uint256,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OfferAccepted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OfferAmountUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OfferCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OfferDeadlineExtended"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OfferRemoved"): EventFragment;
}

export interface OfferAcceptedEventObject {
  offerOwner: string;
  nft: string;
  tokenId: BigNumber;
  token: string;
  amount: BigNumber;
}
export type OfferAcceptedEvent = TypedEvent<
  [string, string, BigNumber, string, BigNumber],
  OfferAcceptedEventObject
>;

export type OfferAcceptedEventFilter = TypedEventFilter<OfferAcceptedEvent>;

export interface OfferAmountUpdatedEventObject {
  offerOwner: string;
  nft: string;
  tokenId: BigNumber;
  token: string;
  oldAmount: BigNumber;
  newAmount: BigNumber;
}
export type OfferAmountUpdatedEvent = TypedEvent<
  [string, string, BigNumber, string, BigNumber, BigNumber],
  OfferAmountUpdatedEventObject
>;

export type OfferAmountUpdatedEventFilter =
  TypedEventFilter<OfferAmountUpdatedEvent>;

export interface OfferCreatedEventObject {
  offerOwner: string;
  nft: string;
  tokenId: BigNumber;
  token: string;
  amount: BigNumber;
  deadline: BigNumber;
}
export type OfferCreatedEvent = TypedEvent<
  [string, string, BigNumber, string, BigNumber, BigNumber],
  OfferCreatedEventObject
>;

export type OfferCreatedEventFilter = TypedEventFilter<OfferCreatedEvent>;

export interface OfferDeadlineExtendedEventObject {
  offerOwner: string;
  nft: string;
  tokenId: BigNumber;
  oldDeadline: BigNumber;
  newDeadline: BigNumber;
}
export type OfferDeadlineExtendedEvent = TypedEvent<
  [string, string, BigNumber, BigNumber, BigNumber],
  OfferDeadlineExtendedEventObject
>;

export type OfferDeadlineExtendedEventFilter =
  TypedEventFilter<OfferDeadlineExtendedEvent>;

export interface OfferRemovedEventObject {
  nft: string;
  tokenId: BigNumber;
  offerOwner: string;
}
export type OfferRemovedEvent = TypedEvent<
  [string, BigNumber, string],
  OfferRemovedEventObject
>;

export type OfferRemovedEventFilter = TypedEventFilter<OfferRemovedEvent>;

export interface OfferLogic extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OfferLogicInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "OfferAccepted(address,address,uint256,address,uint256)"(
      offerOwner?: PromiseOrValue<string> | null,
      nft?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      token?: null,
      amount?: null
    ): OfferAcceptedEventFilter;
    OfferAccepted(
      offerOwner?: PromiseOrValue<string> | null,
      nft?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      token?: null,
      amount?: null
    ): OfferAcceptedEventFilter;

    "OfferAmountUpdated(address,address,uint256,address,uint256,uint256)"(
      offerOwner?: PromiseOrValue<string> | null,
      nft?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      token?: null,
      oldAmount?: null,
      newAmount?: null
    ): OfferAmountUpdatedEventFilter;
    OfferAmountUpdated(
      offerOwner?: PromiseOrValue<string> | null,
      nft?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      token?: null,
      oldAmount?: null,
      newAmount?: null
    ): OfferAmountUpdatedEventFilter;

    "OfferCreated(address,address,uint256,address,uint256,uint256)"(
      offerOwner?: PromiseOrValue<string> | null,
      nft?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      token?: null,
      amount?: null,
      deadline?: null
    ): OfferCreatedEventFilter;
    OfferCreated(
      offerOwner?: PromiseOrValue<string> | null,
      nft?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      token?: null,
      amount?: null,
      deadline?: null
    ): OfferCreatedEventFilter;

    "OfferDeadlineExtended(address,address,uint256,uint256,uint256)"(
      offerOwner?: PromiseOrValue<string> | null,
      nft?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      oldDeadline?: null,
      newDeadline?: null
    ): OfferDeadlineExtendedEventFilter;
    OfferDeadlineExtended(
      offerOwner?: PromiseOrValue<string> | null,
      nft?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      oldDeadline?: null,
      newDeadline?: null
    ): OfferDeadlineExtendedEventFilter;

    "OfferRemoved(address,uint256,address)"(
      nft?: null,
      tokenId?: null,
      offerOwner?: null
    ): OfferRemovedEventFilter;
    OfferRemoved(
      nft?: null,
      tokenId?: null,
      offerOwner?: null
    ): OfferRemovedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
