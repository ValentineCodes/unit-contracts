/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BuyLogic,
  BuyLogicInterface,
} from "../../../../contracts/libraries/logic/BuyLogic";

const _abi = [
  {
    inputs: [],
    name: "Unit__InsufficientAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestedToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "actualToken",
        type: "address",
      },
    ],
    name: "Unit__InvalidItemToken",
    type: "error",
  },
  {
    inputs: [],
    name: "Unit__ItemDeadlineReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Unit__ItemInAuction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Unit__ItemNotListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Unit__ItemPriceInEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Unit__ItemPriceInToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unit__TokenTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
];

const _bytecode =
  "0x6112d8610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063d2941bea14610045578063f55beefc1461006e575b600080fd5b81801561005157600080fd5b5061006c60048036038101906100679190610f29565b610097565b005b81801561007a57600080fd5b5061009560048036038101906100909190610e87565b6106a3565b005b60008660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016006820154815250509050600081608001511161027b5783836040517f18def1c4000000000000000000000000000000000000000000000000000000008152600401610272929190611034565b60405180910390fd5b8060a00151156102c45783836040517f199ead720000000000000000000000000000000000000000000000000000000081526004016102bb929190611034565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff161461034157838382606001516040517f87abf0580000000000000000000000000000000000000000000000000000000081526004016103389392919061105d565b60405180910390fd5b818160800151101561037f576040517fae875ee500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160c0015111801561039757508060c001514210155b156103ce576040517fbfd11b7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600090556005820160006101000a81549060ff0219169055600682016000905550508373ffffffffffffffffffffffffffffffffffffffff166342842e0e826000015133866040518463ffffffff1660e01b815260040161050293929190610ffd565b600060405180830381600087803b15801561051c57600080fd5b505af1158015610530573d6000803e3d6000fd5b5050505060008061054084610db7565b9150915081886000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d39190611094565b92505081905550808760008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106289190611094565b92505081905550848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f93c830507acd24c092e291f65f36eccf9df2be394d8b7a1802669761ff1ed995600088604051610690929190611034565b60405180910390a4505050505050505050565b60008760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481525050905060008160800151116108875784846040517f18def1c400000000000000000000000000000000000000000000000000000000815260040161087e929190611034565b60405180910390fd5b81816080015110156108c5576040517fae875ee500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff16141561093d5784846040517f194829df000000000000000000000000000000000000000000000000000000008152600401610934929190611034565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff16146109b7578281606001516040517fc51a67aa0000000000000000000000000000000000000000000000000000000081526004016109ae929190610fd4565b60405180910390fd5b60008160c001511180156109cf57508060c001514210155b15610a06576040517fbfd11b7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600090556005820160006101000a81549060ff0219169055600682016000905550508473ffffffffffffffffffffffffffffffffffffffff166342842e0e826000015133876040518463ffffffff1660e01b8152600401610b3a93929190610ffd565b600060405180830381600087803b158015610b5457600080fd5b505af1158015610b68573d6000803e3d6000fd5b50505050600015158373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610bad93929190610ffd565b602060405180830381600087803b158015610bc757600080fd5b505af1158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff9190610e5a565b15151415610c48573083836040517f19a87e01000000000000000000000000000000000000000000000000000000008152600401610c3f93929190610ffd565b60405180910390fd5b600080610c5484610db7565b9150915081896000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ce79190611094565b92505081905550808860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d3c9190611094565b92505081905550858773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f93c830507acd24c092e291f65f36eccf9df2be394d8b7a1802669761ff1ed9958888604051610da3929190611034565b60405180910390a450505050505050505050565b600080606483610dc791906110ea565b90508083610dd5919061111b565b9150915091565b600081359050610deb81611218565b92915050565b600081519050610e008161122f565b92915050565b600081359050610e1581611246565b92915050565b600081359050610e2a8161125d565b92915050565b600081359050610e3f81611274565b92915050565b600081359050610e548161128b565b92915050565b600060208284031215610e7057610e6f611213565b5b6000610e7e84828501610df1565b91505092915050565b600080600080600080600060e0888a031215610ea657610ea5611213565b5b6000610eb48a828b01610e1b565b9750506020610ec58a828b01610e06565b9650506040610ed68a828b01610e30565b9550506060610ee78a828b01610ddc565b9450506080610ef88a828b01610e45565b93505060a0610f098a828b01610ddc565b92505060c0610f1a8a828b01610e45565b91505092959891949750929550565b60008060008060008060c08789031215610f4657610f45611213565b5b6000610f5489828a01610e1b565b9650506020610f6589828a01610e06565b9550506040610f7689828a01610e30565b9450506060610f8789828a01610ddc565b9350506080610f9889828a01610e45565b92505060a0610fa989828a01610e45565b9150509295509295509295565b610fbf8161114f565b82525050565b610fce816111ab565b82525050565b6000604082019050610fe96000830185610fb6565b610ff66020830184610fb6565b9392505050565b60006060820190506110126000830186610fb6565b61101f6020830185610fb6565b61102c6040830184610fc5565b949350505050565b60006040820190506110496000830185610fb6565b6110566020830184610fc5565b9392505050565b60006060820190506110726000830186610fb6565b61107f6020830185610fc5565b61108c6040830184610fb6565b949350505050565b600061109f826111ab565b91506110aa836111ab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110df576110de6111b5565b5b828201905092915050565b60006110f5826111ab565b9150611100836111ab565b9250826111105761110f6111e4565b5b828204905092915050565b6000611126826111ab565b9150611131836111ab565b925082821015611144576111436111b5565b5b828203905092915050565b600061115a8261118b565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6112218161114f565b811461122c57600080fd5b50565b61123881611161565b811461124357600080fd5b50565b61124f8161116d565b811461125a57600080fd5b50565b61126681611177565b811461127157600080fd5b50565b61127d81611181565b811461128857600080fd5b50565b611294816111ab565b811461129f57600080fd5b5056fea2646970667358221220f8dd1323c040976379ea6d863b95b3f735d43cf5820b12fd173aaeaa95113de164736f6c63430008060033";

type BuyLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyLogic__factory extends ContractFactory {
  constructor(...args: BuyLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuyLogic> {
    return super.deploy(overrides || {}) as Promise<BuyLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BuyLogic {
    return super.attach(address) as BuyLogic;
  }
  override connect(signer: Signer): BuyLogic__factory {
    return super.connect(signer) as BuyLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyLogicInterface {
    return new utils.Interface(_abi) as BuyLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuyLogic {
    return new Contract(address, _abi, signerOrProvider) as BuyLogic;
  }
}
