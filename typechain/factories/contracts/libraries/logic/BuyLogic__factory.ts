/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BuyLogic,
  BuyLogicInterface,
} from "../../../../contracts/libraries/logic/BuyLogic";

const _abi = [
  {
    inputs: [],
    name: "Unit__CannotBuyOwnNFT",
    type: "error",
  },
  {
    inputs: [],
    name: "Unit__InsufficientAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestedToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "actualToken",
        type: "address",
      },
    ],
    name: "Unit__InvalidItemToken",
    type: "error",
  },
  {
    inputs: [],
    name: "Unit__ItemDeadlineReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Unit__ItemInAuction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Unit__ItemNotListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Unit__ItemPriceInEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Unit__ItemPriceInToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unit__TokenTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemBought",
    type: "event",
  },
];

const _bytecode =
  "0x6113ac610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063d2941bea14610045578063f55beefc1461006e575b600080fd5b81801561005157600080fd5b5061006c60048036038101906100679190610ffd565b610097565b005b81801561007a57600080fd5b5061009560048036038101906100909190610f5b565b61070d565b005b60008660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016006820154815250509050600081608001511161027b5783836040517f18def1c4000000000000000000000000000000000000000000000000000000008152600401610272929190611108565b60405180910390fd5b8060a00151156102c45783836040517f199ead720000000000000000000000000000000000000000000000000000000081526004016102bb929190611108565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff161461034157838382606001516040517f87abf05800000000000000000000000000000000000000000000000000000000815260040161033893929190611131565b60405180910390fd5b818160800151101561037f576040517fae875ee500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160c0015111801561039757508060c001514210155b156103ce576040517fbfd11b7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161415610438576040517f4232223400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600090556005820160006101000a81549060ff0219169055600682016000905550508373ffffffffffffffffffffffffffffffffffffffff166342842e0e826000015133866040518463ffffffff1660e01b815260040161056c939291906110d1565b600060405180830381600087803b15801561058657600080fd5b505af115801561059a573d6000803e3d6000fd5b505050506000806105aa84610e8b565b9150915081886000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461063d9190611168565b92505081905550808760008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106929190611168565b92505081905550848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f93c830507acd24c092e291f65f36eccf9df2be394d8b7a1802669761ff1ed9956000886040516106fa929190611108565b60405180910390a4505050505050505050565b60008760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481525050905060008160800151116108f15784846040517f18def1c40000000000000000000000000000000000000000000000000000000081526004016108e8929190611108565b60405180910390fd5b818160800151101561092f576040517fae875ee500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff1614156109a75784846040517f194829df00000000000000000000000000000000000000000000000000000000815260040161099e929190611108565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff1614610a21578281606001516040517fc51a67aa000000000000000000000000000000000000000000000000000000008152600401610a189291906110a8565b60405180910390fd5b60008160c00151118015610a3957508060c001514210155b15610a70576040517fbfd11b7d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161415610ada576040517f4232223400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600090556005820160006101000a81549060ff0219169055600682016000905550508473ffffffffffffffffffffffffffffffffffffffff166342842e0e826000015133876040518463ffffffff1660e01b8152600401610c0e939291906110d1565b600060405180830381600087803b158015610c2857600080fd5b505af1158015610c3c573d6000803e3d6000fd5b50505050600015158373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610c81939291906110d1565b602060405180830381600087803b158015610c9b57600080fd5b505af1158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd39190610f2e565b15151415610d1c573083836040517f19a87e01000000000000000000000000000000000000000000000000000000008152600401610d13939291906110d1565b60405180910390fd5b600080610d2884610e8b565b9150915081896000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dbb9190611168565b92505081905550808860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e109190611168565b92505081905550858773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f93c830507acd24c092e291f65f36eccf9df2be394d8b7a1802669761ff1ed9958888604051610e77929190611108565b60405180910390a450505050505050505050565b600080606483610e9b91906111be565b90508083610ea991906111ef565b9150915091565b600081359050610ebf816112ec565b92915050565b600081519050610ed481611303565b92915050565b600081359050610ee98161131a565b92915050565b600081359050610efe81611331565b92915050565b600081359050610f1381611348565b92915050565b600081359050610f288161135f565b92915050565b600060208284031215610f4457610f436112e7565b5b6000610f5284828501610ec5565b91505092915050565b600080600080600080600060e0888a031215610f7a57610f796112e7565b5b6000610f888a828b01610eef565b9750506020610f998a828b01610eda565b9650506040610faa8a828b01610f04565b9550506060610fbb8a828b01610eb0565b9450506080610fcc8a828b01610f19565b93505060a0610fdd8a828b01610eb0565b92505060c0610fee8a828b01610f19565b91505092959891949750929550565b60008060008060008060c0878903121561101a576110196112e7565b5b600061102889828a01610eef565b965050602061103989828a01610eda565b955050604061104a89828a01610f04565b945050606061105b89828a01610eb0565b935050608061106c89828a01610f19565b92505060a061107d89828a01610f19565b9150509295509295509295565b61109381611223565b82525050565b6110a28161127f565b82525050565b60006040820190506110bd600083018561108a565b6110ca602083018461108a565b9392505050565b60006060820190506110e6600083018661108a565b6110f3602083018561108a565b6111006040830184611099565b949350505050565b600060408201905061111d600083018561108a565b61112a6020830184611099565b9392505050565b6000606082019050611146600083018661108a565b6111536020830185611099565b611160604083018461108a565b949350505050565b60006111738261127f565b915061117e8361127f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111b3576111b2611289565b5b828201905092915050565b60006111c98261127f565b91506111d48361127f565b9250826111e4576111e36112b8565b5b828204905092915050565b60006111fa8261127f565b91506112058361127f565b92508282101561121857611217611289565b5b828203905092915050565b600061122e8261125f565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6112f581611223565b811461130057600080fd5b50565b61130c81611235565b811461131757600080fd5b50565b61132381611241565b811461132e57600080fd5b50565b61133a8161124b565b811461134557600080fd5b50565b61135181611255565b811461135c57600080fd5b50565b6113688161127f565b811461137357600080fd5b5056fea2646970667358221220766dfc14280d6c64d42f897a2dcd882ebfec263a32c4055a10d28ec79b08579e64736f6c63430008060033";

type BuyLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyLogic__factory extends ContractFactory {
  constructor(...args: BuyLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuyLogic> {
    return super.deploy(overrides || {}) as Promise<BuyLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BuyLogic {
    return super.attach(address) as BuyLogic;
  }
  override connect(signer: Signer): BuyLogic__factory {
    return super.connect(signer) as BuyLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyLogicInterface {
    return new utils.Interface(_abi) as BuyLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuyLogic {
    return new Contract(address, _abi, signerOrProvider) as BuyLogic;
  }
}
