/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  WithdrawLogic,
  WithdrawLogicInterface,
} from "../../../../contracts/libraries/logic/WithdrawLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unit__EthTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestedAmount",
        type: "uint256",
      },
    ],
    name: "Unit__InsufficientFees",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unit__TokenTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unit__ZeroEarnings",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EarningsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
];

const _bytecode =
  "0x610a4b610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80634efc6cc014610045578063f07dc0f91461006e575b600080fd5b81801561005157600080fd5b5061006c60048036038101906100679190610801565b610097565b005b81801561007a57600080fd5b50610095600480360381019061009091906107c1565b6103cc565b005b808360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561015a578260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816040517f8423b28f00000000000000000000000000000000000000000000000000000000815260040161015192919061090a565b60405180910390fd5b808360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102915760003373ffffffffffffffffffffffffffffffffffffffff168260405161020190610895565b60006040518083038185875af1925050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b505090508061028b5733826040517fd0066ab90000000000000000000000000000000000000000000000000000000081526004016102829291906108e1565b60405180910390fd5b5061036c565b600015158273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016102d09291906108e1565b602060405180830381600087803b1580156102ea57600080fd5b505af11580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190610794565b1515141561036b573382826040517f19a87e01000000000000000000000000000000000000000000000000000000008152600401610362939291906108aa565b60405180910390fd5b5b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5e110f8bc8a20b65dcc87f224bdf1cc039346e267118bae2739847f07321ffa860405160405180910390a4505050565b60008260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610486576040517f25fb860200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105f05760003373ffffffffffffffffffffffffffffffffffffffff168260405161056090610895565b60006040518083038185875af1925050503d806000811461059d576040519150601f19603f3d011682016040523d82523d6000602084013e6105a2565b606091505b50509050806105ea5733826040517fd0066ab90000000000000000000000000000000000000000000000000000000081526004016105e19291906108e1565b60405180910390fd5b506106cb565b600015158273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161062f9291906108e1565b602060405180830381600087803b15801561064957600080fd5b505af115801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610794565b151514156106ca573382826040517f19a87e010000000000000000000000000000000000000000000000000000000081526004016106c1939291906108aa565b60405180910390fd5b5b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0c8584df0a37548f26644c41809e5f908b58e8888dd441691e8a2174ec89f30560405160405180910390a4505050565b60008135905061073a816109a2565b92915050565b60008151905061074f816109b9565b92915050565b600081359050610764816109d0565b92915050565b600081359050610779816109e7565b92915050565b60008135905061078e816109fe565b92915050565b6000602082840312156107aa576107a961099a565b5b60006107b884828501610740565b91505092915050565b600080604083850312156107d8576107d761099a565b5b60006107e685828601610755565b92505060206107f78582860161072b565b9150509250929050565b60008060006060848603121561081a5761081961099a565b5b60006108288682870161076a565b93505060206108398682870161072b565b925050604061084a8682870161077f565b9150509250925092565b61085d8161093e565b82525050565b6000610870600083610933565b915061087b8261099f565b600082019050919050565b61088f81610990565b82525050565b60006108a082610863565b9150819050919050565b60006060820190506108bf6000830186610854565b6108cc6020830185610854565b6108d96040830184610886565b949350505050565b60006040820190506108f66000830185610854565b6109036020830184610886565b9392505050565b600060408201905061091f6000830185610886565b61092c6020830184610886565b9392505050565b600081905092915050565b600061094982610970565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b50565b6109ab8161093e565b81146109b657600080fd5b50565b6109c281610950565b81146109cd57600080fd5b50565b6109d98161095c565b81146109e457600080fd5b50565b6109f081610966565b81146109fb57600080fd5b50565b610a0781610990565b8114610a1257600080fd5b5056fea26469706673582212204dd7fd12a32318131eceb6b7d8b8f6517130862bee5f74d37055debd0673f19764736f6c63430008060033";

type WithdrawLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawLogic__factory extends ContractFactory {
  constructor(...args: WithdrawLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawLogic> {
    return super.deploy(overrides || {}) as Promise<WithdrawLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawLogic {
    return super.attach(address) as WithdrawLogic;
  }
  override connect(signer: Signer): WithdrawLogic__factory {
    return super.connect(signer) as WithdrawLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawLogicInterface {
    return new utils.Interface(_abi) as WithdrawLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawLogic {
    return new Contract(address, _abi, signerOrProvider) as WithdrawLogic;
  }
}
