/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  WithdrawLogic,
  WithdrawLogicInterface,
} from "../../../../contracts/libraries/logic/WithdrawLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unit__EthTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unit__TokenTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unit__ZeroEarnings",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EarningsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
];

const _bytecode =
  "0x610993610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80631f0c813f14610045578063f07dc0f91461006e575b600080fd5b81801561005157600080fd5b5061006c6004803603810190610067919061079c565b610097565b005b81801561007a57600080fd5b506100956004803603810190610090919061075c565b61037c565b005b60008260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610114576040517f25fb860200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102415760003373ffffffffffffffffffffffffffffffffffffffff16826040516101b19061081d565b60006040518083038185875af1925050503d80600081146101ee576040519150601f19603f3d011682016040523d82523d6000602084013e6101f3565b606091505b505090508061023b5733826040517fd0066ab9000000000000000000000000000000000000000000000000000000008152600401610232929190610869565b60405180910390fd5b5061031c565b600015158273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610280929190610869565b602060405180830381600087803b15801561029a57600080fd5b505af11580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d2919061072f565b1515141561031b573382826040517f19a87e0100000000000000000000000000000000000000000000000000000000815260040161031293929190610832565b60405180910390fd5b5b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5e110f8bc8a20b65dcc87f224bdf1cc039346e267118bae2739847f07321ffa860405160405180910390a4505050565b60008260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610436576040517f25fb860200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105a05760003373ffffffffffffffffffffffffffffffffffffffff16826040516105109061081d565b60006040518083038185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b505090508061059a5733826040517fd0066ab9000000000000000000000000000000000000000000000000000000008152600401610591929190610869565b60405180910390fd5b5061067b565b600015158273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105df929190610869565b602060405180830381600087803b1580156105f957600080fd5b505af115801561060d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610631919061072f565b1515141561067a573382826040517f19a87e0100000000000000000000000000000000000000000000000000000000815260040161067193929190610832565b60405180910390fd5b5b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0c8584df0a37548f26644c41809e5f908b58e8888dd441691e8a2174ec89f30560405160405180910390a4505050565b6000813590506106ea81610901565b92915050565b6000815190506106ff81610918565b92915050565b6000813590506107148161092f565b92915050565b60008135905061072981610946565b92915050565b600060208284031215610745576107446108f9565b5b6000610753848285016106f0565b91505092915050565b60008060408385031215610773576107726108f9565b5b600061078185828601610705565b9250506020610792858286016106db565b9150509250929050565b600080604083850312156107b3576107b26108f9565b5b60006107c18582860161071a565b92505060206107d2858286016106db565b9150509250929050565b6107e58161089d565b82525050565b60006107f8600083610892565b9150610803826108fe565b600082019050919050565b610817816108ef565b82525050565b6000610828826107eb565b9150819050919050565b600060608201905061084760008301866107dc565b61085460208301856107dc565b610861604083018461080e565b949350505050565b600060408201905061087e60008301856107dc565b61088b602083018461080e565b9392505050565b600081905092915050565b60006108a8826108cf565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b50565b61090a8161089d565b811461091557600080fd5b50565b610921816108af565b811461092c57600080fd5b50565b610938816108bb565b811461094357600080fd5b50565b61094f816108c5565b811461095a57600080fd5b5056fea26469706673582212209c8995a4b78e4e66b89794e38a108adaf7f644a25ae7196604a88411beca5a1664736f6c63430008060033";

type WithdrawLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawLogic__factory extends ContractFactory {
  constructor(...args: WithdrawLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawLogic> {
    return super.deploy(overrides || {}) as Promise<WithdrawLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawLogic {
    return super.attach(address) as WithdrawLogic;
  }
  override connect(signer: Signer): WithdrawLogic__factory {
    return super.connect(signer) as WithdrawLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawLogicInterface {
    return new utils.Interface(_abi) as WithdrawLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawLogic {
    return new Contract(address, _abi, signerOrProvider) as WithdrawLogic;
  }
}
